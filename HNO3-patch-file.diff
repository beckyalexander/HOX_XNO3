From e2f0b2dc57fa611802caaef9b527c7131dc67600 Mon Sep 17 00:00:00 2001
From: Becky Alexander <beckya@atmos.washington.edu>
Date: Fri, 5 Jul 2024 16:11:21 -0700
Subject: [PATCH 1/3] Added BrNO3 + Br-/Cl- = Br2/BrCl +HNO3 in tropospheric
 liquid cloud and aerosol.

---
 KPP/fullchem/commonIncludeVars.H       |   6 +-
 KPP/fullchem/fullchem.eqn              |   5 +
 KPP/fullchem/fullchem_RateLawFuncs.F90 | 289 ++++++++++++++++++++++++-
 3 files changed, 287 insertions(+), 13 deletions(-)

diff --git a/KPP/fullchem/commonIncludeVars.H b/KPP/fullchem/commonIncludeVars.H
index d788126eb..95ae1a9b4 100644
--- a/KPP/fullchem/commonIncludeVars.H
+++ b/KPP/fullchem/commonIncludeVars.H
@@ -139,9 +139,9 @@
      REAL(dp) :: Cl_conc_SSC    ! Cl- in coarse sea salt [mol/kg H2O]
      REAL(dp) :: cldFr          ! Cloud fraction
      REAL(dp) :: clearFr        ! Clear sky fraction
-     REAL(dp) :: frac_Br_CldA   ! Frac of Br- in fine SSA(in cloud)
-     REAL(dp) :: frac_Br_CldC   ! Frac of Br- in coarse SSA (in cloud)
-     REAL(dp) :: frac_Br_CldG   ! Frac of Br- in gas phase
+     REAL(dp) :: frac_Br_CldA   ! Frac of Br- from fine SSA(in cloud)
+     REAL(dp) :: frac_Br_CldC   ! Frac of Br- from coarse SSA (in cloud)
+     REAL(dp) :: frac_Br_CldG   ! Frac of Br- from gas phase
      REAL(dp) :: frac_Cl_CldA   ! Frac of Cl- in fine SSA (in cloud)
      REAL(dp) :: frac_Cl_CldC   ! Frac of Cl- in coarse SSA (in cloud)
      REAL(dp) :: frac_Cl_CldG   ! Frac of Cl- in gas phase
diff --git a/KPP/fullchem/fullchem.eqn b/KPP/fullchem/fullchem.eqn
index 28e005613..9d5ac4d7a 100644
--- a/KPP/fullchem/fullchem.eqn
+++ b/KPP/fullchem/fullchem.eqn
@@ -1433,6 +1433,11 @@ OH + SALACL = 0.500Cl2 :       OHuptkBySALACl( State_Het );
 OH + SALCCL = 0.500Cl2 :       OHuptkBySALCCl( State_Het );                                                 {2018/03/12; XW}
 BrNO3 + H2O = HOBr + HNO3 :    BrNO3uptkByH2O( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
 BrNO3 + HCl = BrCl + HNO3 :    BrNO3uptkByHCl( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
+BrNO3 + HBr = Br2 + HNO3 :     BrNO3uptkByHBr( State_Het ):                                                 {2024/07/05; BAlexander}
+BrNO3 + BrSALA = Br2 + HNO3 :  BrNO3uptkByBrSALA( State_Het ):                                              {2024/07/05; BAlexander}
+BrNO3 + BrSALC = Br2 + HNO3 :  BrNO3uptkByBrSALC( State_Het ):                                              {2024/07/05; BAlexander}
+BrNO3 + SALACl = BrCl + HNO3 : BrNO3uptkBySALACl( State_Het ):                                              {2024/07/05; BAlexander}
+BrNO3 + SALCCl = BrCl + HNO3 : BrNO3uptkBySALCCl( State_Het ):                                              {2024/07/05; BAlexander}
 ClNO3 + H2O = HOCl + HNO3 :    ClNO3uptkByH2O( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
 ClNO3 + HCl = Cl2 + HNO3 :     ClNO3uptkByHCl( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
 ClNO3 + HBr = BrCl + HNO3 :    ClNO3uptkByHBr( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
diff --git a/KPP/fullchem/fullchem_RateLawFuncs.F90 b/KPP/fullchem/fullchem_RateLawFuncs.F90
index 346c41066..ef72f5a63 100644
--- a/KPP/fullchem/fullchem_RateLawFuncs.F90
+++ b/KPP/fullchem/fullchem_RateLawFuncs.F90
@@ -807,27 +807,50 @@ CONTAINS
     TYPE(HetState), INTENT(IN) :: H              ! Hetchem State
     REAL(dp)                   :: k              ! rxn rate [1/s]
     !
-    REAL(dp) :: gamma, gamLiq, gamIce, srMW      ! local vars
+!    REAL(dp) :: gamma, gamLiq, gamIce, srMW      ! local vars
+    REAL(dp) :: gamma, gammaIce, srMW      ! local vars
+    REAL(dp) :: area,       branchBr, branchLiq
+    REAL(dp) :: branchIce,  dum1,     dum2
+
     !
     k      = 0.0_dp
-    gamLiq = 0.0021_dp * TEMP - 0.561_dp         ! Rxn prob, liq (Deiber 2004)
-    gamIce = 5.3e-4_dp * EXP( 1100.0_dp / TEMP ) ! Rxn prob on ice
+!    gamLiq = 0.0021_dp * TEMP - 0.561_dp         ! Rxn prob, liq (Deiber 2004)
+!    gamIce = 5.3e-4_dp * EXP( 1100.0_dp / TEMP ) ! Rxn prob on ice
     srMw   = SR_MW(ind_BrNO3)
+
+    ! Rxn rate of BrNO3 + H2O on fine sea salt in clear sky
+    CALL Gam_BrNO3_Aer( H, H%Br_conc_SSA, gamma, branchBr )
+    area      = H%ClearFr * H%aClArea
+    branchLiq = ( 1.0_dp - branchBr ) * ( 1.0 - H%frac_SALACL )
+    k         = k + Ars_L1K( area, H%aClRadi, gamma, srMw ) * branchLiq
+
     !
     ! BrNO3 + H2O on sulfate and sea salt (clear sky)
-    gamma = gamLiq
-    k = k + Ars_L1K( H%ClearFr * H%xArea(SUL), H%xRadi(SUL), gamma, srMw )
-    k = k + Ars_L1K( H%ClearFr * H%xArea(SSA), H%xRadi(SSA), gamma, srMw )
-    k = k + Ars_L1K( H%ClearFr * H%xArea(SSC), H%xRadi(SSC), gamma, srMw )
-    k = k + H%xArea(SLA) * H%KHETI_SLA(BrNO3_plus_H2O)
+!    gamma = gamLiq
+!    k = k + Ars_L1K( H%ClearFr * H%xArea(SUL), H%xRadi(SUL), gamma, srMw )
+!    k = k + Ars_L1K( H%ClearFr * H%xArea(SSA), H%xRadi(SSA), gamma, srMw )
+!    k = k + Ars_L1K( H%ClearFr * H%xArea(SSC), H%xRadi(SSC), gamma, srMw )
+!    k = k + H%xArea(SLA) * H%KHETI_SLA(BrNO3_plus_H2O)
     !
     ! BrNO3 + H2O uptake on irregular ice cloud (clear sky)
     gamma = 0.3_dp                              ! rxn prob, ice [1]
     IF ( H%NatSurface ) gamma = 0.001_dp        ! rxn prob, NAT [1]
     k = k + Ars_L1K( H%ClearFr * H%xArea(IIC), H%xRadi(IIC), gamma, srMw )
+
+    IF ( .not. H%stratBox ) THEN
     !
     ! BrNO3 + H2O in tropospheric cloud
-    k = k + CloudHet( H, srMw, gamLiq, gamIce, 1.0_dp, 1.0_dp )
+!    k = k + CloudHet( H, srMw, gamLiq, gamIce, 1.0_dp, 1.0_dp )
+       CALL Gam_BrNO3_Aer( H, H%Br_conc_Cld, gamma, branchBr )
+       branchLiq = 1.0_dp - branchBr
+
+      ! ClNO3 + H2O uptake prob [1] in tropospheric ice cloud
+       CALL Gam_BrNO3_Ice( H, gammaIce, dum1, dum2, branchIce )
+
+       ! BrNO3 + H2O rxn rate in cloudy tropopsheric grid box
+       k = k + CloudHet( H, srMw, gamma, gammaIce, branchLiq, branchIce )
+
+    ENDIF
     !
     ! Assume BrNO3 is limiting, so update the removal rate accordingly
     k = kIIR1Ltd( C(ind_BrNO3), C(ind_H2O), k )
@@ -841,6 +864,7 @@ CONTAINS
     TYPE(HetState), INTENT(IN) :: H              ! Hetchem State
     REAL(dp)                   :: k              ! rxn prob[1], rxn rate [1/s]
     REAL(dp)                   :: srMw           ! local vars
+    REAL(dp)                   :: gammaIce, branchIce, dum1, dum2
     !
     k    = 0.0_dp
     srMw = SR_MW(ind_BrNO3)
@@ -851,6 +875,10 @@ CONTAINS
        k = k + Ars_L1K( H%xArea(SUL), H%xRadi(SUL), 0.9_dp, srMw )
        k = k + H%xArea(SLA) * H%KHETI_SLA(BrNO3_plus_HCl)
        k = k + Ars_L1K( H%xArea(IIC), H%xRadi(IIC), 0.3_dp, srMw )
+    ELSE
+       ! BrNO3 + HCl uptake rate in tropospheric ice cloud
+       CALL Gam_BrNO3_Ice( H, gammaIce, branchIce, dum1, dum2 )
+       k = k + CloudHet( H, srMw, 0.0_dp, gammaIce, 0.0_dp, branchIce )
     ENDIF
 
     ! Assume BrNO3 is limiting, so update the removal rate accordingly
@@ -861,6 +889,237 @@ CONTAINS
 
   END FUNCTION BrNO3uptkByHCl
 
+  FUNCTION BrNO3uptkByHBr( H ) RESULT( k )
+    !
+    ! Computes the reaction rate [1/s] of BrNO3(g) + HBr-.
+    !
+    TYPE(HetState), INTENT(IN) :: H              ! Hetchem State
+    REAL(dp)                   :: k              ! Rxn rate [1/s]
+    !
+    REAL(dp) :: branchBr, branchLiq, branchIce, dum1
+    REAL(dp) :: dum2,     gamma,     gammaIce,  srMw
+    !
+    k    = 0.0_dp
+    srMw = SR_MW(ind_BrNO3)
+    !
+    IF ( .not. H%stratBox ) THEN
+       !
+       ! BrNO3 + HBr uptake rate in tropospheric liquid cloud
+       CALL Gam_BrNO3_Aer( H, H%Br_conc_Cld, gamma, branchBr )
+       branchLiq = branchBr * H%frac_Br_CldG
+       !
+       ! no BrNO3 + HBr uptake rate in tropospheric ice cloud 
+       ! Note that this does happen for ClNO3 so may add later
+!       gammaIce  = 0.0_dp
+!       branchIce = 0.0_dp
+       ! BrNO3 + HBr uptake rate in tropospheric ice cloud
+       CALL Gam_BrNO3_Ice( H, gammaIce, dum1, branchIce, dum2 )       
+
+       ! ClNO3 + HBr overall uptake rate, accounting for cloud fraction
+       k = CloudHet( H, srMw, gamma, gammaIce, branchLiq, branchIce )
+    ENDIF
+    !
+    ! Assume ClNO3 is limiting, so recompute reaction rate accordingly
+    k = kIIR1Ltd( C(ind_BrNO3), C(ind_HBr), k )
+  END FUNCTION BrNO3uptkByHBr
+
+  FUNCTION BrNO3uptkByBrSALA( H ) RESULT( k )
+    !
+    ! Computes rxn rate [1/s] of BrNO3 + BrSALA.
+    !
+    TYPE(HetState), INTENT(IN) :: H              ! Hetchem State
+    REAL(dp)                   :: k              ! Rxn rate [1/s]
+    !
+    REAL(dp) :: area, branch, branchBr, gamma, srMw
+    !
+    k    = 0.0_dp
+    srMw = SR_MW(ind_BrNO3)
+    !
+    ! First compute uptake of BrNO3 + BrSALA in tropospheric cloud
+    IF ( .not. H%stratBox ) THEN
+       !
+       ! Compute BrNO3 + BrSALA uptake rate & branching ratio
+       CALL Gam_BrNO3_Aer( H, H%Br_conc_Cld, gamma, branchBr )
+       branch = branchBr * H%frac_Br_CldA
+       !
+       ! Compute BrNO3 + BrSALA uptake rate accounting for cloud fraction
+       k = k + CloudHet( H, srMw, gamma, 0.0_dp, branch, 0.0_dp )
+    ENDIF
+    !
+    ! Compute uptake rate of BrNO3 + BrSALA in clear sky
+    CALL Gam_BrNO3_Aer( H, H%Br_conc_SSA, gamma, branchBr )
+    area = H%ClearFr * H%aClArea
+    k    = k + Ars_L1K( area, H%aClRadi, gamma, srMw ) * branchBr
+    !
+    ! Assume BrNO3 is limiting, so recompute reaction rate accordingly
+    k = kIIR1Ltd( C(ind_BrNO3), C(ind_BrSALA), k )
+  END FUNCTION BrNO3uptkByBrSALA
+
+  FUNCTION BrNO3uptkByBrSALC( H ) RESULT( k )
+    !
+    ! Computes rxn rate [1/s] of BrNO3 + BrSALC.
+    !
+    TYPE(HetState), INTENT(IN) :: H
+    REAL(dp)                   :: k
+    !
+    REAL(dp) :: area, branch, branchBr, gamma, srMw
+    !
+    k    = 0.0_dp
+    srMw = SR_MW(ind_BrNO3)
+    !
+    ! First compute uptake of BrNO3 + BrSALA in tropospheric cloud
+    IF ( .not. H%stratBox ) THEN
+       !
+       ! Compute BrNO3 + BrSALA uptake rate & branching ratio
+       CALL Gam_BrNO3_Aer( H, H%Br_conc_Cld, gamma, branchBr )
+       branch = branchBr * H%frac_Br_CldC
+       !
+       ! Compute BrNO3 + BrSALC uptake rate accounting for cloud fraction
+       k = k + CloudHet( H, srMw, gamma, 0.0_dp, branch, 0.0_dp )
+    ENDIF
+    !
+    ! Compute uptake rate of BrNO3 + BrSALA in clear sky
+    CALL Gam_BrNO3_Aer( H, H%Br_conc_SSC, gamma, branchBr )
+    area = H%ClearFr * H%xArea(SSC)
+    k    = k + Ars_L1K( area, H%xRadi(SSC), gamma, srMw ) * branchBr
+    !
+    ! Assume ClNO3 is limiting, so recompute reaction rate accordingly
+    k = kIIR1Ltd( C(ind_BrNO3), C(ind_BrSALC), k )
+  END FUNCTION BrNO3uptkByBrSALC
+
+  FUNCTION BrNO3uptkBySALACL( H ) RESULT( k )
+    !
+    ! Computes rxn rate [1/s] of BrNO3 + SALACL.
+    !
+    TYPE(HetState), INTENT(IN) :: H
+    REAL(dp)                   :: k
+    !
+    REAL(dp) :: area, branch, branchBr, gamma, srMw
+    !
+    k    = 0.0_dp
+
+    IF ( H%stratBox ) RETURN
+
+    srMw = SR_MW(ind_BrNO3)
+    !
+    ! Compute uptake rate of ClNO3 + BrSALA in clear sky
+    CALL Gam_BrNO3_Aer( H, H%Br_conc_SSA, gamma, branchBr )
+    area   = H%ClearFr * H%aClArea
+    branch = ( 1.0_dp - branchBr ) * H%frac_SALACL
+    k      = k + Ars_L1K( area, H%aClRadi, gamma, srMw )* branch
+    !
+    ! Assume BrNO3 is limiting, so recompute reaction rate accordingly
+    k = kIIR1Ltd( C(ind_BrNO3), C(ind_SALACL), k )
+  END FUNCTION BrNO3uptkBySALACL
+
+  FUNCTION BrNO3uptkBySALCCL( H ) RESULT( k )
+    !
+    ! Computes rxn rate [1/s] of BrNO3 + SALCCL.
+    !
+    TYPE(HetState), INTENT(IN) :: H              ! Hetchem State
+    REAL(dp)                   :: k              ! Rxn rate [1/s]
+    !
+    REAL(dp) :: area, branch, branchBr, gamma, srMw
+    !
+    k    = 0.0_dp
+
+    IF ( H%stratBox ) RETURN
+
+    srMw = SR_MW(ind_BrNO3)
+    !
+    ! Compute uptake rate of ClNO3 + BrSALA in clear sky
+    CALL Gam_BrNO3_Aer( H, H%Br_conc_SSC, gamma, branchBr )
+    area   = H%ClearFr * H%xArea(SSC)
+    branch = 1.0 - branchBr
+    k      = k + Ars_L1K( area, H%xRadi(SSC), gamma, srMw )* branch
+    !
+    ! Assume BrNO3 is limiting, so recompute reaction rate accordingly
+    k = kIIR1Ltd( C(ind_BrNO3), C(ind_SALCCL), k )
+  END FUNCTION BrNO3uptkBySALCCL
+
+  SUBROUTINE Gam_BrNO3_Aer( H, C_Br, gamma, branchBr )
+    !
+    ! Calculates reactive uptake coefficients [1] for BrNO3 + Br- 
+    ! and BrNO3 + H2O.
+    ! Adding Cl- did not increase the rate beyond BrNO3 + H2O, 
+    ! so this isn't calculated separately [Dieber et al., 2004]
+    !
+    TYPE(HetState), INTENT(IN) :: H
+    REAL(dp), INTENT(IN)       :: C_Br     ! Br concentration (mol/L)
+    REAL(dp), INTENT(OUT)      :: gamma    ! Rxn prob [1]
+    REAL(dp), INTENT(OUT)      :: branchBr ! BrNO3 + HBr- branch ratio [1]
+    !
+    ! 1 / mass accum coeff
+    REAL(dp), PARAMETER :: INV_AB = 1.0_dp / 0.063_dp   ! 1 / mass accum coeff
+    ! H2k0 where H=henry's law constant and k0 = first-order rate 
+    ! constant for uptake of BrNO3 in H2O
+    ! The product of H and sqrt(k0) is experimentally determined (see IUPAC)
+    REAL(dp), PARAMETER :: K_0    = 1.2e+5_dp ** 2.0_dp 
+    ! Aqueous phase diffusion coefficient
+    REAL(dp), PARAMETER :: D_l    = 5.0e-6_dp           ! Deiber et al 2004
+    !
+    REAL(dp) :: M_X, cavg, k_Br, k_tot, gb0, gb2, gb_tot !gbr
+    !
+    ! thermal velocity (cm/s)
+    M_X      = MW(ind_BrNO3) * 1.0e-3_dp
+    cavg     = SQRT( EIGHT_RSTARG_T / ( H%PI * M_X ) ) * 100.0_dp
+    !
+    ! H2k2br cm2 s-1. H=henry's law constant, k2 = second order rate 
+    ! constant for ClNO3+Br
+    ! This is similar to K_0 above. k0 = k2 * [Br-]
+    k_Br     = 1.0e+12_dp * C_Br
+    !
+    ! Calculate gb1 for BrNO3 + Cl-
+    ! Following [Deiber et al., 2004], gamma is not significantly different
+    ! from BrNO3 + H2O (gamma = 0.0244) independent of Cl- concentration,
+    ! but BrCl rather than HOBr formed. gb2 can be calculated reversely from
+    ! gb1 = gb0 hydrolysis
+    gb0      = FOUR_R_T * 1.2e+5_dp * SQRT( D_l ) / cavg
+    ! k_tot is the first order rate constant for the sum of BrNO3+H2O and BrNO3+Br-
+    k_tot    = K_0 + k_Br                                    !H2(k0+k2Br)
+    gb_tot   = FOUR_R_T * SQRT( k_tot * D_l ) / cavg
+    !
+    ! Reaction probability for BrNO3 + Br- [1]
+    gamma    = 1.0_dp / ( INV_AB + 1.0_dp / gb_tot )
+    !
+    ! Branching ratio for ClNO3 + HBr-
+    ! NOTE: ClNO3 + Cl- branch ratio = 1.0 - branchBr
+    branchBr = k_Br / k_tot
+  END SUBROUTINE Gam_BrNO3_Aer
+
+  SUBROUTINE Gam_BrNO3_Ice( H, gamma, brHCl, brHBr, brH2O )
+    !
+    ! Computes the reactive uptake probability and branching ratio
+    ! for BrNO3 + H2O, ClNO3 + HCl, and ClNO3 + HBr in ice clouds
+    !
+    TYPE(HetState), INTENT(IN)  :: H             ! Hetchem State
+    REAL(dp),       INTENT(OUT) :: gamma         ! Uptake prob [1]
+    REAL(dp),       INTENT(OUT) :: brHCl         ! BrNO3 + HCl branch ratio
+    REAL(dp),       INTENT(OUT) :: brHBr         ! BrNO3 + HBr branch ratio
+    REAL(dp),       INTENT(OUT) :: brH2O         ! BrNO3 + H2O branch ratio
+    !
+    !
+    REAL(dp) :: g1, g2, g3
+    !
+    ! BrNO3 + HCl uptake probability [1] (Crowley et al., 2010)
+    g1    = 0.3_dp * H%HCl_theta
+    !
+    ! BrNO3 + HBr uptake probability [1] (Crowley et al., 2010)
+    g2    = 6.6e-3_dp * EXP( 700.0_dp / TEMP ) * H%HBr_theta
+    !
+    ! BrNO3 + H2O uptake probability [1] (Crowley et al., 2010)
+    g3    = 5.3e-4_dp * EXP( 1100.0_dp / TEMP )
+    !
+    ! Total reaction probability
+    gamma = g1 + g2 + g3
+    !
+    ! Branching ratios for each path (HCl, HBr, H2O)
+    brHCl = g1 / gamma
+    brHBr = g2 / gamma
+    brH2O = g3 / gamma
+  END SUBROUTINE Gam_BrNO3_Ice
+
+
   !=========================================================================
   ! Hetchem rate-law functions for ClNO2
   !=========================================================================
@@ -1095,6 +1354,9 @@ CONTAINS
   SUBROUTINE Gam_ClNO3_Aer( H, C_Br, gamma, branchBr )
     !
     ! Calculates reactive uptake coefficients [1] for ClNO3 + Br-.
+    ! and ClNO3 + H2O.
+    ! Adding Cl- did not increase the rate beyond ClNO3 + H2O, 
+    ! so this isn't calculated separately
     !
     !
     TYPE(HetState), INTENT(IN) :: H
@@ -1104,7 +1366,11 @@ CONTAINS
     !
     REAL(dp), PARAMETER :: INV_AB = 1.0_dp / 0.108_dp   ! 1 / mass accum coeff
     REAL(dp), PARAMETER :: K_0    = 1.2e+5_dp ** 2.0_dp ! H2k0
+    ! H2k0 where H=henry's law constant and k0 = first-order rate 
+    ! constant for uptake of ClNO3 in H2O
+    ! The product of H and sqrt(k0) is experimentally determined (see IUPAC)
     REAL(dp), PARAMETER :: D_l    = 5.0e-6_dp           ! Deiber et al 2004
+                                                        ! Aq. phase diff. coeff.
     !
     REAL(dp) :: M_X, cavg, k_Br, k_tot, gb0, gb2, gb_tot !gbr
     !
@@ -1112,7 +1378,9 @@ CONTAINS
     M_X      = MW(ind_ClNO3) * 1.0e-3_dp
     cavg     = SQRT( EIGHT_RSTARG_T / ( H%PI * M_X ) ) * 100.0_dp
     !
-    ! H2k2br cm2 s-1.
+    ! H2k2br cm2 s-1. H=henry's law constant, k2 = second order rate 
+    ! constant for ClNO3+Br
+    ! This is similar to K_0 above. k0 = k2 * [Br-]
     k_Br     = 1.0e+12_dp * C_Br
     !
     ! Calculate gb1 for ClNO3 + Cl-
@@ -1121,6 +1389,7 @@ CONTAINS
     ! but Cl2 rather than HOCl formed. gb2 can be calculated reversely from
     ! gb1 = gb0 hydrolysis
     gb0      = FOUR_R_T * 1.2e+5_dp * SQRT( D_l ) / cavg
+    ! k_tot is the first order rate constant for the sum of ClNO3+H2O and ClNO3+Br-
     k_tot    = K_0 + k_Br                                    !H2(k0+k2Br)
     gb_tot   = FOUR_R_T * SQRT( k_tot * D_l ) / cavg
     !
-- 
2.30.2


From 7074dcbed6556e162dc7f623c8b15f92c0032b9d Mon Sep 17 00:00:00 2001
From: Becky Alexander <beckya@atmos.washington.edu>
Date: Fri, 5 Jul 2024 16:56:03 -0700
Subject: [PATCH 2/3] Added IONO2 + Br- = IBr + HNO3 in clouds. Added reaction
 IONO2 + HBr Added functions Gam_IONO2_Aer and IONO2uptkByHBr Modified
 functions IONO2UPtkbyH2O and IbrkdnbyacidBrSALA/C Fixed types on
 BrNO3UptkbySALACl/SALCCl

---
 KPP/fullchem/fullchem.eqn              |  11 +-
 KPP/fullchem/fullchem_RateLawFuncs.F90 | 171 +++++++++++++++++++++++--
 2 files changed, 167 insertions(+), 15 deletions(-)

diff --git a/KPP/fullchem/fullchem.eqn b/KPP/fullchem/fullchem.eqn
index 9d5ac4d7a..392bf6f1e 100644
--- a/KPP/fullchem/fullchem.eqn
+++ b/KPP/fullchem/fullchem.eqn
@@ -1433,11 +1433,11 @@ OH + SALACL = 0.500Cl2 :       OHuptkBySALACl( State_Het );
 OH + SALCCL = 0.500Cl2 :       OHuptkBySALCCl( State_Het );                                                 {2018/03/12; XW}
 BrNO3 + H2O = HOBr + HNO3 :    BrNO3uptkByH2O( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
 BrNO3 + HCl = BrCl + HNO3 :    BrNO3uptkByHCl( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
-BrNO3 + HBr = Br2 + HNO3 :     BrNO3uptkByHBr( State_Het ):                                                 {2024/07/05; BAlexander}
-BrNO3 + BrSALA = Br2 + HNO3 :  BrNO3uptkByBrSALA( State_Het ):                                              {2024/07/05; BAlexander}
-BrNO3 + BrSALC = Br2 + HNO3 :  BrNO3uptkByBrSALC( State_Het ):                                              {2024/07/05; BAlexander}
-BrNO3 + SALACl = BrCl + HNO3 : BrNO3uptkBySALACl( State_Het ):                                              {2024/07/05; BAlexander}
-BrNO3 + SALCCl = BrCl + HNO3 : BrNO3uptkBySALCCl( State_Het ):                                              {2024/07/05; BAlexander}
+BrNO3 + HBr = Br2 + HNO3 :     BrNO3uptkByHBr( State_Het );                                                 {2024/07/05; BAlexander}
+BrNO3 + BrSALA = Br2 + HNO3 :  BrNO3uptkByBrSALA( State_Het );                                              {2024/07/05; BAlexander}
+BrNO3 + BrSALC = Br2 + HNO3 :  BrNO3uptkByBrSALC( State_Het );                                              {2024/07/05; BAlexander}
+BrNO3 + SALACl = BrCl + HNO3 : BrNO3uptkBySALACl( State_Het );                                              {2024/07/05; BAlexander}
+BrNO3 + SALCCl = BrCl + HNO3 : BrNO3uptkBySALCCl( State_Het );                                              {2024/07/05; BAlexander}
 ClNO3 + H2O = HOCl + HNO3 :    ClNO3uptkByH2O( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
 ClNO3 + HCl = Cl2 + HNO3 :     ClNO3uptkByHCl( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
 ClNO3 + HBr = BrCl + HNO3 :    ClNO3uptkByHBr( State_Het );                                                 {2014/02/03; Eastham2014; SDE}
@@ -1492,6 +1492,7 @@ IONO = ISALC + HNO2 :          IuptkByAlkSALC1stOrd( SR_MW(ind_IONO), 0.02_dp, S
 IONO2 = ISALA + HNO3 :         IuptkByAlkSALA1stOrd( SR_MW(ind_IONO2), 0.01_dp, State_Het );                {2022/12/02; Restored deleted rxn:BA}
 IONO2 = ISALC + HNO3 :         IuptkByAlkSALC1stOrd( SR_MW(ind_IONO2), 0.01_dp, State_Het );                {2022/12/02; Restored deleted rxn:BA}
 IONO2 + H2O = HOI + HNO3 :     IONO2uptkByH2O( State_Het );                                                 {2021/09/16 XW, TSherwen}
+IONO2 + HBr = IBr + HNO3 :     IONO2uptkByHBr( State_Het );                                                 {2024/07/05; BAlexander}
 IONO + BrSALA = IBr + HNO2 :   IbrkdnByAcidBrSALA( SR_MW(ind_IONO), C(ind_IONO), 0.02_dp, State_Het );      {2017/09/22; Sherwen2017;TS,JAS,SDE,XW}
 IONO + BrSALC = IBr + HNO2 :   IbrkdnByAcidBrSALC( SR_MW(ind_IONO), C(ind_IONO), 0.02_dp, State_Het );      {2017/09/22; Sherwen2017;TS,JAS,SDE,XW}
 IONO + SALACL = ICl + HNO2 :   IbrkdnByAcidSALACl( SR_MW(ind_IONO), C(ind_IONO), 0.02_dp, State_Het );      {2017/09/22; Sherwen2017;TS,JAS,SDE,XW}
diff --git a/KPP/fullchem/fullchem_RateLawFuncs.F90 b/KPP/fullchem/fullchem_RateLawFuncs.F90
index ef72f5a63..847958d3d 100644
--- a/KPP/fullchem/fullchem_RateLawFuncs.F90
+++ b/KPP/fullchem/fullchem_RateLawFuncs.F90
@@ -1002,8 +1002,8 @@ CONTAINS
 
     srMw = SR_MW(ind_BrNO3)
     !
-    ! Compute uptake rate of ClNO3 + BrSALA in clear sky
-    CALL Gam_BrNO3_Aer( H, H%Br_conc_SSA, gamma, branchBr )
+    ! Compute uptake rate of BrNO3 + SALACl in clear sky
+    CALL Gam_BrNO3_Aer( H, H%Cl_conc_SSA, gamma, branchBr )
     area   = H%ClearFr * H%aClArea
     branch = ( 1.0_dp - branchBr ) * H%frac_SALACL
     k      = k + Ars_L1K( area, H%aClRadi, gamma, srMw )* branch
@@ -1027,8 +1027,8 @@ CONTAINS
 
     srMw = SR_MW(ind_BrNO3)
     !
-    ! Compute uptake rate of ClNO3 + BrSALA in clear sky
-    CALL Gam_BrNO3_Aer( H, H%Br_conc_SSC, gamma, branchBr )
+    ! Compute uptake rate of BrNO3 + SALCCl in clear sky
+    CALL Gam_BrNO3_Aer( H, H%Cl_conc_SSC, gamma, branchBr )
     area   = H%ClearFr * H%xArea(SSC)
     branch = 1.0 - branchBr
     k      = k + Ars_L1K( area, H%xRadi(SSC), gamma, srMw )* branch
@@ -2841,6 +2841,57 @@ CONTAINS
   ! (HI, HOI, I2O2, I2O3, I2O4, IONO2, IONO3)
   !=========================================================================
 
+  SUBROUTINE Gam_IONO2_Aer( H, C_Br, gamma, branchBr )
+    !
+    ! Calculates reactive uptake coefficients [1] for IONO2 + Br- 
+    ! and IONO2 + H2O.
+    ! Rate constant information not available. Model after BrNO3.
+    ! Adding Cl- did not increase the rate beyond BrNO3 + H2O, 
+    ! so this isn't calculated separately [Dieber et al., 2004]
+    !
+    TYPE(HetState), INTENT(IN) :: H
+    REAL(dp), INTENT(IN)       :: C_Br     ! Br concentration (mol/L)
+    REAL(dp), INTENT(OUT)      :: gamma    ! Rxn prob [1]
+    REAL(dp), INTENT(OUT)      :: branchBr ! BrNO3 + HBr- branch ratio [1]
+    !
+    ! 1 / mass accum coeff
+    REAL(dp), PARAMETER :: INV_AB = 1.0_dp / 0.063_dp   ! 1 / mass accum coeff
+    ! H2k0 where H=henry's law constant and k0 = first-order rate 
+    ! constant for uptake of BrNO3 in H2O
+    ! The product of H and sqrt(k0) is experimentally determined (see IUPAC)
+    REAL(dp), PARAMETER :: K_0    = 1.2e+5_dp ** 2.0_dp 
+    ! Aqueous phase diffusion coefficient
+    REAL(dp), PARAMETER :: D_l    = 5.0e-6_dp           ! Deiber et al 2004
+    !
+    REAL(dp) :: M_X, cavg, k_Br, k_tot, gb0, gb2, gb_tot !gbr
+    !
+    ! thermal velocity (cm/s)
+    M_X      = MW(ind_IONO2) * 1.0e-3_dp
+    cavg     = SQRT( EIGHT_RSTARG_T / ( H%PI * M_X ) ) * 100.0_dp
+    !
+    ! H2k2br cm2 s-1. H=henry's law constant, k2 = second order rate 
+    ! constant for ClNO3+Br
+    ! This is similar to K_0 above. k0 = k2 * [Br-]
+    k_Br     = 1.0e+12_dp * C_Br
+    !
+    ! Calculate gb1 for IONO2 + Cl-
+    ! Following [Deiber et al., 2004], gamma is not significantly different
+    ! from BrNO3 + H2O (gamma = 0.0244) independent of Cl- concentration,
+    ! but BrCl rather than HOBr formed. gb2 can be calculated reversely from
+    ! gb1 = gb0 hydrolysis
+    gb0      = FOUR_R_T * 1.2e+5_dp * SQRT( D_l ) / cavg
+    ! k_tot is the first order rate constant for the sum of BrNO3+H2O and BrNO3+Br-
+    k_tot    = K_0 + k_Br                                    !H2(k0+k2Br)
+    gb_tot   = FOUR_R_T * SQRT( k_tot * D_l ) / cavg
+    !
+    ! Reaction probability for BrNO3 + Br- [1]
+    gamma    = 1.0_dp / ( INV_AB + 1.0_dp / gb_tot )
+    !
+    ! Branching ratio for BrNO3 + HBr-
+    ! NOTE: ClNO3 + Cl- branch ratio = 1.0 - branchBr
+    branchBr = k_Br / k_tot
+  END SUBROUTINE Gam_IONO2_Aer
+
   FUNCTION IuptkBySulf1stOrd( srMw, gamma, H ) RESULT( k )
     !
     ! Computes the reaction rate [1/s] for uptake of iodine species
@@ -2939,16 +2990,28 @@ CONTAINS
     TYPE(HetState), INTENT(IN) :: H
     REAL(dp)                   :: k
     REAL(dp)                   :: ssarea         ! acidic sea salt area
+    REAL(dp)                   :: branchBr, branch, gamma_cloud
     !
     ! Exit if in the stratosphere
     k = 0.0_dp
+
     IF ( H%stratBox ) RETURN
+
+      ! Compute IONO2 + BrSALA uptake rate & branching ratio in liquid cloud
+       CALL Gam_IONO2_Aer( H, H%Br_conc_Cld, gamma_cloud, branchBr )
+       branch = branchBr * H%frac_Br_CldA
+       !
+       ! Compute BrNO3 + BrSALA uptake rate accounting for cloud fraction
+       k = k + CloudHet( H, srMw, gamma_cloud, 0.0_dp, branch, 0.0_dp )
     !
     IF ( H%SSA_is_Acid ) THEN
        ssarea = H%f_Acid_SSA * H%xArea(SSA)
        k = 0.15_dp * Ars_L1K( ssarea, H%xRadi(SSA), gamma, srMw )
-       k = kIIR1Ltd( conc, C(ind_BrSALA), k ) ! conc is limiting, so update k
+!       k = kIIR1Ltd( conc, C(ind_BrSALA), k ) ! conc is limiting, so update k
     ENDIF
+
+    k = kIIR1Ltd( conc, C(ind_BrSALA), k ) ! conc is limiting, so update k
+
   END FUNCTION IbrkdnbyAcidBrSALA
 
   FUNCTION IbrkdnByAcidBrSALC( srMw, conc, gamma, H ) RESULT( k )
@@ -2960,16 +3023,29 @@ CONTAINS
     TYPE(HetState), INTENT(IN) :: H
     REAL(dp)                   :: k
     REAL(dp)                   :: ssarea         ! acidic sea salt area
+    REAL(dp)                   :: branchBr
+    REAL(dp)                   :: branch, gamma_cloud
+
     !
     ! Exit if in the stratosphere
     k = 0.0_dp
     IF ( H%stratBox ) RETURN
+
+      ! Compute IONO2 + BrSALC uptake rate & branching ratio in trop. liq. clouds
+       CALL Gam_IONO2_Aer( H, H%Br_conc_Cld, gamma_cloud, branchBr )
+       branch = branchBr * H%frac_Br_CldC
+       !
+       ! Compute IONO2 + BrSALC uptake rate accounting for cloud fraction
+       k = k + CloudHet( H, srMw, gamma_cloud, 0.0_dp, branch, 0.0_dp )
     !
     IF ( H%SSC_is_Acid ) THEN
        ssarea = H%f_Acid_SSC * H%xArea(SSC)
        k = 0.15_dp * Ars_L1K( ssarea, H%xRadi(SSC), gamma, srMw )
-       k = kIIR1Ltd( conc, C(ind_BrSALC), k ) ! conc is limiting, so update k
+!       k = kIIR1Ltd( conc, C(ind_BrSALC), k ) ! conc is limiting, so update k
     ENDIF
+
+       k = kIIR1Ltd( conc, C(ind_BrSALC), k ) ! conc is limiting, so update k
+
   END FUNCTION IbrkdnbyAcidBrSALC
 
   FUNCTION IbrkdnByAcidSALACl( srMw, conc, gamma, H ) RESULT( k )
@@ -2985,12 +3061,14 @@ CONTAINS
     ! Exit if in the stratosphere
     k = 0.0_dp
     IF ( H%stratBox ) RETURN
+
     !
     IF ( H%SSA_is_Acid ) THEN
        ssarea = H%f_Acid_SSA * H%xArea(SSA)
        k = 0.85_dp * Ars_L1K( ssarea, H%xRadi(SSA), gamma, srMw )
        k = kIIR1Ltd( conc, C(ind_SALACl), k ) ! conc is limiting, so update k
     ENDIF
+
   END FUNCTION IbrkdnbyAcidSALACl
 
   FUNCTION IbrkdnByAcidSALCCl( srMw, conc, gamma, H ) RESULT( k )
@@ -3214,14 +3292,24 @@ CONTAINS
     REAL(dp)                   :: k              ! Rxn rate [1/s]
     !
     REAL(dp) :: area, conc, gamma, srMw
+    REAL(dp) :: branchLiq, branchBr
+    REAL(dp) :: gammaIce, branchIce, dum1, dum2
+
     !
     k    = 0.0_dp
     srMw = SR_MW(ind_IONO2)
+
+    ! Rxn rate of IONO2 + H2O on fine sea salt in clear sky
+    CALL Gam_IONO2_Aer( H, H%Br_conc_SSA, gamma, branchBr )
+    area      = H%ClearFr * H%aClArea
+    branchLiq = ( 1.0_dp - branchBr ) * ( 1.0 - H%frac_SALACL )
+    k         = k + Ars_L1K( area, H%aClRadi, gamma, srMw ) * branchLiq
+
     !
     ! Tropopsheric sulfate (use T-dependent gamma, cf Deiber et al 2004)
-    area  = H%ClearFr * H%xArea(SUL)
-    gamma = MAX( ( 0.0021_dp * TEMP - 0.561_dp ), 0.0_dp )
-    k     = k + Ars_L1K( area, H%xRadi(SUL), gamma, srMw )
+!    area  = H%ClearFr * H%xArea(SUL)
+!    gamma = MAX( ( 0.0021_dp * TEMP - 0.561_dp ), 0.0_dp )
+!    k     = k + Ars_L1K( area, H%xRadi(SUL), gamma, srMw )
     !
     ! Stratospheric liquid aerosol
     k = k + H%xArea(SLA) * H%KHETI_SLA(BrNO3_plus_H2O)
@@ -3231,16 +3319,79 @@ CONTAINS
     gamma = 0.3_dp
     IF ( H%natSurface ) gamma = 0.001_dp
     k = k + Ars_L1K( area, H%xRadi(IIC), gamma, srMw )
+
+    IF ( .not. H%stratBox ) THEN
+
+    ! IONO2 + H2O in tropospheric cloud
+!    k = k + CloudHet( H, srMw, gamLiq, gamIce, 1.0_dp, 1.0_dp )
+       CALL Gam_IONO2_Aer( H, H%Br_conc_Cld, gamma, branchBr )
+       branchLiq = 1.0_dp - branchBr
+    !       
+
+       ! Assume no IONO2 + H2O in tropospheric ice cloud. 
+       ! Note that ClNO3 + H2O occurs on trop. ice cloud
+       gammaIce  =  0.0_dp
+       branchIce = 0.0_dp
+
+      ! IONO2 + H2O uptake prob [1] in tropospheric ice cloud.
+      ! use same rate parameters as for BrNO3 + H2O on trop. ice cloud
+       CALL Gam_BrNO3_Ice( H, gammaIce, dum1, dum2, branchIce )
+
+    ! Also account for cloudy grid box
+    ! Use gamma(liquid) = gamma(ice) = 0.01, to make the uptake coefficient
+    ! consistent with hydrolysis in aerosols (T. Sherwen, 28 Sep 2021)
+!    k = k + CloudHet( H, srMw, 0.01_dp, 0.01_dp, 1.0_dp, 1.0_dp )
+      k = k + CloudHet( H, srMw, gamma, gammaIce, branchLiq, branchIce )
+
+    ENDIF
+
     !
     ! Also account for cloudy grid box
     ! Use gamma(liquid) = gamma(ice) = 0.01, to make the uptake coefficient
     ! consistent with hydrolysis in aerosols (T. Sherwen, 28 Sep 2021)
-    k = k + CloudHet( H, srMw, 0.01_dp, 0.01_dp, 1.0_dp, 1.0_dp )
+!    k = k + CloudHet( H, srMw, 0.01_dp, 0.01_dp, 1.0_dp, 1.0_dp )
     !
     ! Assume IONO2 is limiting, so update the reaction rate accordingly
     k = kIIR1Ltd( C(ind_IONO2), C(ind_H2O), k )
   END FUNCTION IONO2uptkByH2O
 
+  FUNCTION IONO2uptkByHBr( H ) RESULT( k )
+    !
+    ! Computes the reaction rate [1/s] of IONO2(g) + HBr-.
+    !
+    TYPE(HetState), INTENT(IN) :: H              ! Hetchem State
+    REAL(dp)                   :: k              ! Rxn rate [1/s]
+    !
+    REAL(dp) :: branchBr, branchLiq, branchIce, dum1
+    REAL(dp) :: dum2,     gamma,     gammaIce,  srMw
+    !
+    k    = 0.0_dp
+    srMw = SR_MW(ind_IONO2)
+    !
+    IF ( .not. H%stratBox ) THEN
+       !
+       ! BrNO3 + HBr uptake rate in tropospheric liquid cloud
+       CALL Gam_IONO2_Aer( H, H%Br_conc_Cld, gamma, branchBr )
+       branchLiq = branchBr * H%frac_Br_CldG
+       !
+       ! no BrNO3 + HBr uptake rate in tropospheric ice cloud 
+       ! Note that this does happen for ClNO3 so may add later
+ !      gammaIce  = 0.0_dp
+ !      branchIce = 0.0_dp
+       ! IONO2 + HBr uptake rate in tropospheric ice cloud
+       ! Use same rate parameters as for BrNO3 + HBr in ice cloud
+       CALL Gam_BrNO3_Ice( H, gammaIce, dum1, branchIce, dum2 )
+
+       !
+       ! ClNO3 + HBr overall uptake rate, accounting for cloud fraction
+       k = CloudHet( H, srMw, gamma, gammaIce, branchLiq, branchIce )
+    ENDIF
+    !
+    ! Assume ClNO3 is limiting, so recompute reaction rate accordingly
+    k = kIIR1Ltd( C(ind_IONO2), C(ind_HBr), k )
+  END FUNCTION IONO2uptkByHBr
+
+
   SUBROUTINE Gam_HOI_Cld( H,         gamma,     k_tot,                 &
                           k_HOI_Cl, k_HOI_Br, k_HOI_HSO3, k_HOI_HSO3_2 )
     !
-- 
2.30.2


From d91f5f3b8ebd41662776adb5a49c8f2409774068 Mon Sep 17 00:00:00 2001
From: Becky Alexander <beckya@atmos.washington.edu>
Date: Fri, 5 Jul 2024 17:16:23 -0700
Subject: [PATCH 3/3] Added IONO2 + HCl on ice clouds

---
 KPP/fullchem/fullchem.eqn              |  1 +
 KPP/fullchem/fullchem_RateLawFuncs.F90 | 26 ++++++++++++++++++++++++++
 2 files changed, 27 insertions(+)

diff --git a/KPP/fullchem/fullchem.eqn b/KPP/fullchem/fullchem.eqn
index 392bf6f1e..ed5063523 100644
--- a/KPP/fullchem/fullchem.eqn
+++ b/KPP/fullchem/fullchem.eqn
@@ -1493,6 +1493,7 @@ IONO2 = ISALA + HNO3 :         IuptkByAlkSALA1stOrd( SR_MW(ind_IONO2), 0.01_dp,
 IONO2 = ISALC + HNO3 :         IuptkByAlkSALC1stOrd( SR_MW(ind_IONO2), 0.01_dp, State_Het );                {2022/12/02; Restored deleted rxn:BA}
 IONO2 + H2O = HOI + HNO3 :     IONO2uptkByH2O( State_Het );                                                 {2021/09/16 XW, TSherwen}
 IONO2 + HBr = IBr + HNO3 :     IONO2uptkByHBr( State_Het );                                                 {2024/07/05; BAlexander}
+IONO2 + HCl = ICl + HNO3 :     IONO2uptkByHCl( State_Het );                                                 {2024/07/05; BAlexander}
 IONO + BrSALA = IBr + HNO2 :   IbrkdnByAcidBrSALA( SR_MW(ind_IONO), C(ind_IONO), 0.02_dp, State_Het );      {2017/09/22; Sherwen2017;TS,JAS,SDE,XW}
 IONO + BrSALC = IBr + HNO2 :   IbrkdnByAcidBrSALC( SR_MW(ind_IONO), C(ind_IONO), 0.02_dp, State_Het );      {2017/09/22; Sherwen2017;TS,JAS,SDE,XW}
 IONO + SALACL = ICl + HNO2 :   IbrkdnByAcidSALACl( SR_MW(ind_IONO), C(ind_IONO), 0.02_dp, State_Het );      {2017/09/22; Sherwen2017;TS,JAS,SDE,XW}
diff --git a/KPP/fullchem/fullchem_RateLawFuncs.F90 b/KPP/fullchem/fullchem_RateLawFuncs.F90
index 847958d3d..f2f2b2370 100644
--- a/KPP/fullchem/fullchem_RateLawFuncs.F90
+++ b/KPP/fullchem/fullchem_RateLawFuncs.F90
@@ -3391,6 +3391,32 @@ CONTAINS
     k = kIIR1Ltd( C(ind_IONO2), C(ind_HBr), k )
   END FUNCTION IONO2uptkByHBr
 
+  FUNCTION IONO2uptkByHCl( H ) RESULT( k )
+    !
+    ! Computes uptake rate for IONO2(g) + HCl(l,s)
+    ! in tropospheric ice clouds only
+    !
+    TYPE(HetState), INTENT(IN) :: H              ! Hetchem State
+    REAL(dp)                   :: k              ! rxn prob[1], rxn rate [1/s]
+    REAL(dp)                   :: srMw           ! local vars
+    REAL(dp)                   :: gammaIce, branchIce, dum1, dum2
+    !
+    k    = 0.0_dp
+    srMw = SR_MW(ind_IONO2)
+    !
+    ! Apply BrNO3 uptake in stratosphere
+    ! NOTE: NAT and ICE both use the same gamma = 0.3
+    IF ( .not. H %stratBox ) RETURN 
+ 
+       ! IONO2 + HCl uptake rate in tropospheric ice cloud
+       ! Use same rate parameters as for BrNO3 + HCl in trop. ice cloud
+       CALL Gam_BrNO3_Ice( H, gammaIce, branchIce, dum1, dum2 )
+       k = k + CloudHet( H, srMw, 0.0_dp, gammaIce, 0.0_dp, branchIce )
+
+    ! Assume IONO2 is limiting, so update the removal rate accordingly
+    k = kIIR1Ltd( C(ind_IONO2), C(ind_HCl), k )
+
+  END FUNCTION IONO2uptkByHCl
 
   SUBROUTINE Gam_HOI_Cld( H,         gamma,     k_tot,                 &
                           k_HOI_Cl, k_HOI_Br, k_HOI_HSO3, k_HOI_HSO3_2 )
-- 
2.30.2

